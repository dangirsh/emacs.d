* emacs.el

My Emacs configuration file

** Introduction

This is yet another step to the biggest lie in the world: a perfect Emacs configuration file.

** Install

Warning: You may want to save your existing configuration before installing this one.

You may also change the =$MY_SRC_DIR= value to fit your needs.

#+begin_src sh
export MY_SRC_DIR="~/work/src"
mkdir -p $MY_SRC_DIR
git clone https://github.com/pierre-lecocq/yak $MY_SRC_DIR/yak
git clone https://github.com/pierre-lecocq/emacs.d $MY_SRC_DIR/emacs.d
cd  $MY_SRC_DIR/emacs.d && make && make compile
echo "(load \"$MY_SRC_DIR/emacs.d/emacs\")" > ~/.emacs
#+end_src

** Content

*** Yak (Yet Another Konfig-helper)

The idea is just to call =yak/pkg= in order to install and initialize a package. Here is a dummy example:

#+begin_src emacs-lisp
(yak-pkg 'my-package
          ;; The configuration for the package:
          (setq my-package-custom-var1 t)
          (setq my-package-custom-var2 nil)
          (my-package-mode t))
#+end_src

It works for internal packages and third-party packages installed thanks to =package.el=

**** Internal details

[[https://github.com/pierre-lecocq/yak][Yak]] is based on the internal package manager =package.el= and provides 3 sources: MELPA, GNU ELPA and MARMALADE.

| Name              | Type     | Arguments         | Description                                                                                      |
|-------------------+----------+-------------------+--------------------------------------------------------------------------------------------------|
| =yak-base-dir=    | Variable |                   | The base directory for the configuration and the packages. Default: the emacs.el directory       |
| =yak-initialize=  | Function |                   | Initialize and refresh the package manager                                                       |
| =yak-pkg-install= | Function | =name=            | Install the package NAME if needed. It is also in charge to initialize the package manager       |
| =yak-pkg=         | Macro    | =name &rest body= | Install the NAME package and execute BODY after the package is loaded                            |
| =yak-repo=        | Macro    | =name &rest body= | Install the NAME package from its github repository and execute BODY after the package is loaded |

*** Packages

- [[https://github.com/syohex/emacs-anzu][anzu]] - A minor mode which displays current match and total matches information
- [[https://github.com/capitaomorte/autopair][autopair]] - Automagically pair braces and quotes in emacs
- [[https://github.com/pierre-lecocq/bonjourmadame][bonjourmadame]] - Say "Hello ma'am!"
- [[https://github.com/browse-kill-ring/browse-kill-ring][browse-kill-ring]] - For when 'C-y M-y M-y M-y' gets you down
- [[https://github.com/company-mode/company-mode][company]] - Modular in-buffer completion framework for Emacs
- [[https://github.com/pierre-lecocq/cycle-resize][cycle-resize]] - Cycle resize the current window horizontally or vertically
- [[https://github.com/pierre-lecocq/darkmine-theme][darkmine-theme]] - Yet another emacs dark color theme
- [[http://melpa.org/#/htmlize][htmlize]] - Convert buffer text and decorations to HTML
- [[http://emacswiki.org/emacs/InteractivelyDoThings][ido]], ido-hacks, ido-vertical-mode, flx-ido - Interactively do things
- [[https://github.com/nonsequitur/idle-highlight-mode][idle-highlight-mode]] - Highlight word at point on idle
- [[https://github.com/mooz/js2-mode][js2-mode]] - Improved JavaScript editing mode
- [[http://melpa.org/#/markdown-mode][markdown-mode]] - Emacs Major mode for Markdown-formatted text files
- [[https://github.com/ejmr/php-mode][php-mode]], php-extras -  A PHP mode for GNU Emacs
- [[https://github.com/Fanael/rainbow-delimiters][rainbow-delimiters]] - Emacs rainbow delimiters mode
- [[https://julien.danjou.info/projects/emacs-packages][rainbow-mode]] - Colorize color strings
- [[http://emacswiki.org/emacs/RubyMode][ruby-mode]] - Font-locking, indentation support, and navigation for Ruby code
- [[https://github.com/zk-phi/symon][symon]] - Tiny graphical system monitor
- [[https://github.com/fxbois/web-mode][web-mode]] - Web template editing mode for emacs
- [[http://emacswiki.org/emacs/WhiteSpace][whitespace]] - A minor mode to visualize blanks
- [[https://github.com/yoshiki/yaml-mode][yaml-mode]] - The emacs major mode for editing files in the YAML data serialization format

*** Functions

My collection of functions.

| Name                    | Arguments           | Interactive | Description                                                                                                                     |
|-------------------------+---------------------+-------------+---------------------------------------------------------------------------------------------------------------------------------|
| =pl--mkpath=              | =&rest args=          | No          | Create a file or a directory. It takes named arguments: =:name= (string), =:base= (string), =:directory= (boolean), =:create= (boolean) |
| =pl--set-indentation=     |                     | No          | Set indentation rules                                                                                                           |
| =pl-set-locale=           | =locale=              | Yes         | Set a locale (i.e: 'utf-8 or 'latin-1)                                                                                          |
| =pl-get-shell=            |                     | Yes         | Launch a shell. If a shell buffer exists, switch to it. And if we are in a shell buffer, switch to the last buffer              |
| =pl-transparency=         | =value=               | Yes         | Set transparency to the frame. 0 is invisible and 100 is opaque. 90 is wise                                                     |
| =pl-rb-require=           |                     | Yes         | Insert a list of required gems (for ruby development)                                                                           |
| =pl-google-at-point=      |                     | Yes         | Search the word at point on Google                                                                                              |
| =pl-kill-buffers-by-mode= | =&optional mode-name= | Yes         | Kill all buffers from a specific major-mode (i.e: =dired-mode= or =ruby-mode=)                                                      |
| =pl-cycle-dictionaries=   |                     | Yes         | Cycle through my dictionaries (for =flyspell=)                                                                                    |
| =pl-force-eval=           |                     | Yes         | Forced emacs lisp buffer evaluation                                                                                             |

Initializers, called as a bootstrap

| Name                 | Description                                            |
|----------------------+--------------------------------------------------------|
| =pl--init-behaviour=   | Initialize standard behaviour and set useful variables |
| =pl--init-display=     | Initialize the general display                         |
| =pl--init-files=       | Initialize file assocation with modes                  |
| =pl--init-auto-insert= | Initialize auto-insert behaviour and templates         |
| =pl--init-org-mode=    | Initialize org-mode behaviour                          |
| =pl--init-keybindings= | Initialize keybindings                                 |

*** Keybindings

| Keys        | Function                         | Mode      |
|-------------+----------------------------------+-----------|
| =C-c <right>= | =hs-show-block=                    | prog-mode |
| =C-c <left>=  | =hs-hide-block=                    | prog-mode |
| =C-c <up>=    | =hs-hide-all=                      | prog-mode |
| =C-c <down>=  | =hs-show-all=                      | prog-mode |
| =M-g=         | =goto-line=                        | All       |
| =M-y=         | =browse-kill-ring=                 | All       |
| =M-o=         | =occur=                            | All       |
| =C-c C-c=     | =comment-region=                   | All       |
| =C-c C-u=     | =uncomment-region=                 | All       |
| =C-S-s=       | =find-grep=                        | All       |
| =C-S-f=       | =imenu=                            | All       |
| =C-S-x k=     | =pl-kill-buffers-by-mode=          | All       |
| =C-M-v=       | =cycle-resize-window-vertically=   | All       |
| =C-M-h=       | =cycle-resize-window-horizontally= | All       |
| =f5=          | =bookmark-bmenu-list=              | All       |
| =f6=          | =recentf-open-files=               | All       |
| =f12=         | =pl-get-shell=                     | All       |

** Credits

Pierre Lecocq, version <BIGINT>

** Links

*** Official

- [[https://www.gnu.org/software/emacs/][The GNU Emacs official website]]
- [[http://www.damtp.cam.ac.uk/user/sje30/ess11/resources/emacs-refcard.pdf][Gnu Emacs refcard (PDF)]]
- [[https://www.gnu.org/software/emacs/manual/html_node/emacs/index.html][GNU Emacs manual]]
- [[https://www.gnu.org/software/emacs/manual/html_node/eintr/index.html][An Introduction to Programming in Emacs Lisp]]
- [[https://www.gnu.org/software/emacs/manual/html_node/elisp/index.html][Emacs Lisp Reference Manual]]
- [[https://www.gnu.org/software/emacs/manual/index.html][Other Emacs manuals]]

*** Third-party

- [[http://planet.emacsen.org/][Planet Emacsen]]
- [[http://www.reddit.com/r/emacs][Emacs subreddit]]
- [[http://www.emacswiki.org/][Emacs Wiki]]
- [[http://oremacs.com/][(or emacs]]
- [[http://emacsredux.com/][Emacs Redux]]
- [[http://emacsrocks.com/][Emacs Rocks]]
- [[https://www.masteringemacs.org/][Mastering Emacs]]
- [[http://sachachua.com/blog/category/emacs/][Sacha Chua - Emacs category]]
- [[https://github.com/emacs-tw/awesome-emacs][Awesome Emacs]]
- [[https://github.com/pierre-lecocq/emacs4developers][Emacs for Developers tutorial]]
