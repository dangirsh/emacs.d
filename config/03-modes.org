# Modes config file

* Org mode

** Set org files root
#+begin_src emacs-lisp
(setq org-files-root (format "%sorg/" user-emacs-directory))
(unless (file-accessible-directory-p org-files-root)
  (make-directory org-files-root))
#+end_src

** Set up agenda file

#+begin_src emacs-lisp
(setq org-agenda-files (list
                        (concat org-files-root "agenda.org")
                        ;; Add other files here ...
                        ))
#+end_src

** Capture configuration

#+begin_src emacs-lisp
(setq org-default-notes-file (format "%sorg/notes.org" user-emacs-directory))

(setq org-capture-templates
  '(
     ("t" "Todo" entry (file+headline (concat org-files-root "agenda.org") "Tasks")
        "* TODO %?\n  %U\n  %i\n  %a\n")
     ("j" "Journal" entry (file+datetree (concat org-files-root "notes.org"))
        "* %?\nEntered on %U\n  %i\n  %a")
   ))
#+end_src

** Strike done tasks

#+begin_src emacs-lisp
(setq org-fontify-done-headline t)
(custom-set-faces
 '(org-done ((t (:foreground "PaleGreen"
                             :weight normal
                             :strike-through t))))
 '(org-headline-done
   ((((class color) (min-colors 16) (background dark))
     (:foreground "Grey55" :strike-through t)))))
#+end_src

** Source code syntax highlighting

#+begin_src emacs-lisp
(setq org-src-fontify-natively t)
#+end_src


* Ido mode

** General mode

#+begin_src emacs-lisp
(require 'ido)
(ido-mode t)
(setq ido-enable-flex-matching t)
#+end_src

** Vertical mode

#+begin_src emacs-lisp
(require 'ido-vertical-mode)
(ido-vertical-mode)
#+end_src

** Hacks

#+begin_src emacs-lisp
(require 'ido-hacks)
(ido-hacks-mode)
#+end_src

* Autopair mode

#+begin_src emacs-lisp
(autopair-global-mode t)
#+end_src

* Auto-complete-mode

#+begin_src emacs-lisp
(require 'auto-complete)
(global-auto-complete-mode t)
(require 'auto-complete-config)
(ac-config-default)
(setq-default ac-sources
              '(
                ac-source-abbrev
                ac-source-dictionary
                ac-source-filename
                ac-source-files-in-current-dir
                ac-source-functions
                ac-source-variables
                ac-source-symbols
                ac-source-features
                ac-source-words-in-all-buffer
                ac-source-words-in-same-mode-buffers))
#+end_src

* Recentf mode

#+begin_src emacs-lisp
(require 'recentf)
(recentf-mode 1)
(setq recentf-max-menu-items 25)
#+end_src

* Rainbow mode

Only when CSS file is loaded

#+begin_src emacs-lisp
(add-hook 'css-mode-hook
          (lambda () (rainbow-mode 1)))
#+end_src

* Flycheck mode

#+begin_src emacs-lisp
(require 'flycheck)
#+end_src

* Idle Highlight mode

Highlight a word-at-point after a delay

#+begin_src emacs-lisp
(idle-highlight-mode t)
#+end_src
