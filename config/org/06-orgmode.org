# Org mode specific configuration

* Org mode

** Set org files root
#+begin_src emacs-lisp
(setq org-files-root (format "%sorg/" user-emacs-directory))
(unless (file-accessible-directory-p org-files-root)
  (make-directory org-files-root))
#+end_src

** Set up agenda file

#+begin_src emacs-lisp
(setq org-agenda-files (list
                        (concat org-files-root "agenda.org")
                        ;; Add other files here ...
                        ))
#+end_src

** Capture configuration

#+begin_src emacs-lisp
(setq org-default-notes-file (format "%sorg/notes.org" user-emacs-directory))

(setq org-capture-templates
  '(
     ("t" "Todo" entry (file+headline (concat org-files-root "agenda.org") "Tasks")
        "* TODO %?\n  %U\n  %i\n  %a\n")
     ("j" "Journal" entry (file+datetree (concat org-files-root "notes.org"))
        "* %?\nEntered on %U\n  %i\n  %a\n")
     ("w" "Webplace" entry (file (concat org-files-root "webplaces.org"))
        "* %^L %^g\n")
   ))
#+end_src

** Strike done tasks

#+begin_src emacs-lisp
(setq org-fontify-done-headline t)
(custom-set-faces
 '(org-done ((t (:foreground "PaleGreen"
                             :weight normal
                             :strike-through t))))
 '(org-headline-done
   ((((class color) (min-colors 16) (background dark))
     (:foreground "Grey55" :strike-through t)))))
#+end_src

** Source code syntax highlighting

#+begin_src emacs-lisp
(setq org-src-fontify-natively t)
#+end_src

** Publish webplaces when saving webplaces.org file

#+begin_src emacs-lisp
 (defun pl/org-mode-publish-webplaces()
   (interactive)
   (message "Org mode publish webplaces hook")
   (when (string-match "webplaces\\.org" buffer-file-name)
     (condition-case nil
         (progn
           (let ((buffer-file-name-html (replace-regexp-in-string "\\.org$" ".html" buffer-file-name)))
             (org-export-as-html 3)
             (shell-command (format "scp -P 38170 %s pierre@qsdfgh.com:/home/www/www/" buffer-file-name-html))
             (delete-file buffer-file-name-html)))
       (error "Error while exporting and publishing webplaces.org"))))

;; (add-hook 'org-mode-hook
;;           (lambda ()
;;             (add-hook 'after-save-hook 'pl/org-mode-publish-webplaces nil 'make-it-local)))
;;

#+end_src

** Org publishing projects

#+begin_src emacs-lisp
(setq org-publish-my-header "
<header>
<h1><a href=\"/\">Pierre L.<span></span></a></h1>
<ul class=\"nav\">
<li><a href=\"/\">Home</a></li>
<li><a href=\"about.html\">About</a></li>
</ul>
<ul class=\"contact\">
<li><a href=\"https://github.com/pierre-lecocq?tab=repositories\" class=\"github\" title=\"Github\" target=\"_blank\"></a></li>
<li><a href=\"https://twitter.com/pierre404\" class=\"twitter\" title=\"Twitter\" target=\"_blank\"></a></li>
<li><a href=\"http://fr.linkedin.com/in/pierrelecocqlinkedin\" class=\"linkedin\" title=\"Linkedin\" target=\"_blank\"></a></li>
<li><a href=\"mailto:pierre.lecocq@gmail.com?subject=Contact+from+qsdfgh.com\" class=\"email\" title=\"Email\" target=\"_blank\"></a></li>
</ul>
</header>
")

(setq org-publish-my-footer "
<footer>
<a href=\"/\">Home</a>
 | <a href=\"/about.html\">About</a>
 | <a href=\"/webplaces.html\">Bookmarks</a>
 | Generated with <a href=\"http://orgmode.org\">OrgMode</a> under <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/3.0/deed.en_US\">Creative Commons License</a>
 <form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_top\"><input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\"><input type=\"hidden\" name=\"hosted_button_id\" value=\"5DVQSZALUACTY\"><input type=\"image\" src=\"http://qsdfgh.com/assets/donate.png\" border=\"0\" name=\"submit\" alt=\"\"><img alt=\"\" border=\"0\" src=\"https://www.paypalobjects.com/fr_FR/i/scr/pixel.gif\" width=\"1\" height=\"1\"></form>
</footer>
")

;; Invoke with `org-publish'
(setq org-publish-project-alist '(
                                  ("webplaces-org"
                                   :with-author "Pierre Lecocq"
                                   :with-email "pierre.lecocq@gmail.com"
                                   :base-directory "~/.emacs.d/org/"
                                   :include ("webplaces.org")
                                   :exclude "agenda.org|notes.org"
                                   :exclude-tags ("noexport" "todo")
                                   :recursive nil
                                   :publishing-directory "/ssh:pierre@qsdfgh.com#38170:/home/www/www/"
                                   :publishing-function (org-html-publish-to-html)
                                   :html-extension "html"
                                   :base-extension "org"
                                   :language "en"
                                   :with-toc nil
                                   :section-numbers nil
                                   :html-doctype "html5"
                                   :html-head-include-default-style nil
                                   :html-head-include-scripts nil
                                   :html-head "
<link href='/assets/default2.css' rel='stylesheet' type='text/css' />
<link href='/assets/webplaces.css' rel='stylesheet' type='text/css' />
<script type=\"text/javascript\" src=\"//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>
<script type=\"text/javascript\" src=\"/assets/webplaces.js\"></script>
                                   "
                                   :html-preamble ,org-publish-my-header
                                   :html-postamble ,org-publish-my-footer
                                   :htmlized-source t)
                                  ("qsdfgh-org"
                                   :with-author "Pierre Lecocq"
                                   :with-email "pierre.lecocq@gmail.com"
                                   :base-directory "~/.emacs.d/org/qsdfgh.com/"
                                   :publishing-directory "/ssh:pierre@qsdfgh.com#38170:/home/www/www/"
                                   :publishing-function (org-html-publish-to-html)
                                   :html-extension "html"
                                   :base-extension "org"
                                   :recursive t
                                   :language "en"
                                   :exclude-tags ("noexport" "todo")
                                   :section-numbers nil
                                   :with-toc nil
                                   :org-src-fontify-natively t
                                   :org-export-htmlize-output-type 'css
                                   :html-doctype "html5"
                                   :html-head-include-default-style nil
                                   :html-head-include-scripts nil
                                   :html-head "<link href='/assets/default2.css' rel='stylesheet' type='text/css' />"
                                   :html-preamble ,org-publish-my-header
                                   :html-postamble ,org-publish-my-footer
                                   :htmlized-source t)
                                  ("qsdfgh-assets"
                                   :base-directory "~/.emacs.d/org/qsdfgh.com/assets/"
                                   :publishing-directory "/ssh:pierre@qsdfgh.com#38170:/home/www/www/assets/"
                                   :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|ogg\\|swf"
                                   :recursive t
                                   :publishing-function org-publish-attachment)

                                  ("qsdfgh" :components ("qsdfgh-org" "qsdfgh-assets"))
                                  ("webplaces" :components ("webplaces-org" "qsdfgh-assets"))
                                  ))
#+end_src
