<?php

/**
 * Class name           $1
 * Object id var name   $2
 * Database table name  $3
 */
class $1 extends App_Model
{
    /**
     * Constructor
     *
     * @param int $$2
     */
    public function __construct($$2)
    {
        $this->_data = array(
            '$2' => $$2,
        );

        $cache = App::get('cache');
        $cache_key = '$3_data_' . $$2;

        if (($data = $cache->load($cache_key)) !== false) {
            $this->_data = array_merge($this->_data, $data);
        }
    }

    /**
     * Get array
     *
     * @return array
     */
    public function toArray()
    {
        if (count($this->_data) <= 1) {
            // 0 = empty array
            // 1 = initialized object with only its id
            $this->_getData();
        }

        return $this->_data;
    }

    /**
     * Get authorized columns
     *
     * @return array
     */
    private static function _getColumns()
    {
        static $columns;

        if (!$columns) {
            $columns = array(
                '$2',
                'created_at',
            );
        }

        return $columns;
    }

    /**
     * Get property
     */
    public function __get($key)
    {
        if (array_key_exists($key, $this->_data)) {
            return $this->_data[$key];
        }

        switch ($key) {
            case 'created_at':
                $this->_getData();
                break;

            default:
        }

        if (array_key_exists($key, $this->_data)) {
            return $this->_data[$key];
        }

        throw new App_Exception('Property "' . App::escape($key) . '" not found in ' . App::escape(__CLASS__));
    }

    /**
     * Get data
     */
    protected function _getData()
    {
        $data = null;
        $cache = App::get('cache');
        $cache_key = '$3_data_' . $this->$2;

        if (($data = $cache->load($cache_key)) === false) {
            $conn = App::get('conn');
            $columns = $1::_getColumns();

            $query = "SELECT " . implode(', ', $columns) . " FROM $3 WHERE $2 = :$2";
            $stmt = $conn->prepare($query);
            $stmt->bindValue('$2', $this->$2);
            $stmt->execute();

            $row = $stmt->fetch();
            foreach ($columns as $column) {
                $data[$column] = $row[$column];
            }

            $cache->save($data, $cache_key, array('$3', 'data'));
        }

        $this->_data = array_merge($this->_data, $data);
    }
}
